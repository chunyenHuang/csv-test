{"version":3,"sources":["i18n.js","components/LanguageSelector.js","components/VisitButton.js","components/GithubLinkButton.js","components/TableFooter.js","components/Table.jsx","components/TextLink.js","components/table/CellList.js","components/table/CellParagraph.js","components/table/CellImage.js","components/ProjectDetails.js","components/G0vJsonIconButton.js","components/table/NestedTableContainer.js","data.js","components/ProjectStatusBadget.js","components/ProjectTable.js","components/RepoTable.js","components/OrganizationTable.js","components/DeveloperTable.js","components/HackmdTable.js","components/HackmdTagTable.js","components/ProposalTable.js","components/ProposalEventTable.js","components/TaskTable.js","routes.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["i18n","use","Backend","initReactI18next","init","lng","backend","loadPath","process","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","backgroundColor","borderRadius","input","padding","languages","value","title","isDefault","LanguageSelector","classes","useTranslation","useState","currentValue","setCurrentValue","useEffect","cache","window","localStorage","getItem","changeLanguage","FormControl","variant","className","Select","labelId","id","onChange","event","target","setItem","label","size","OutlinedInput","map","MenuItem","key","VisitButton","url","tooltip","icon","isDisabled","startsWith","tooltipTitle","Tooltip","IconButton","disabled","aria-label","href","Button","color","GithubLinkButton","githubUrl","undefined","CustomFooter","handleRowChange","props","changeRowsPerPage","handlePageChange","_","page","changePage","this","description","count","textLabels","rowsPerPage","TableFooter","TableRow","TableCell","style","display","justifyContent","colSpan","component","labelRowsPerPage","labelDisplayedRows","from","to","displayRows","backIconButtonProps","previous","nextIconButtonProps","next","rowsPerPageOptions","onChangePage","onChangeRowsPerPage","React","Component","withStyles","name","cellStyle","maxWidth","wordBreak","overflowWrap","cursor","fontSize","createMuiTheme","overrides","MUIDataTableToolbar","root","MUIDataTable","paper","responsiveScrollMaxHeight","maxHeight","MUIDataTableHeadCell","fontWeight","MUIDataTableBodyCell","MUIDataTableSelectCell","expandDisabled","visibility","MUIDataTableFilter","Table","data","columns","options","nested","updatedOptions","Object","assign","pagination","responsive","filterType","fixedHeader","resizableColumns","selectableRows","isRowSelectable","onRowClick","rowData","rowMeta","item","dataIndex","console","log","print","customFooter","TextLink","args","list","paddingInlineStart","CellList","targetKey","Array","isArray","keys","filter","i","index","JSON","stringify","CellParagraph","length","substring","img","CellImage","alt","Grid","container","justify","align","src","listContainer","overflow","width","palette","background","inline","image","ProjectDetails","project","t","Paper","xs","alignItems","g0vJson","thumbnail","List","ListItem","divider","ListItemText","primary","Typography","secondary","Fragment","iframe","height","border","marginBottom","closeButton","position","right","top","grey","G0vJsonIconButton","repo","open","setOpen","params","iframeUrl","join","onClick","Dialog","onBackdropClick","aria-labelledby","DialogTitle","DialogContent","nestedContainer","NestedTableContainer","children","env","location","hostname","includes","getGithubDataUrl","getHackmdData","a","dataUrl","fetch","res","json","output","getHackmdDataByTag","inRepos","hackmdData","forEach","record","lastchangeAt","tags","tag","tagUrl","recentTitle","recentLastChangedAt","records","githubRepoUrl","push","getRepos","repos","matchRepo","find","x","targetName","toLowerCase","owner","login","html_url","hackmdUrl","sort","b","getGithubData","getOrganizations","githubInfo","type","reduce","items","fork","pushed_at","getProjects","g0vJsonUrl","name_zh","description_zh","getProposalEvents","values","headers","shift","replace","events","row","obj","header","split","term","date","event_name","dummy_event_type","proposals","reverse","getGitHubIssues","badget","textAlign","ProjectStatusBadget","ProjectTable","inData","setData","status","keywords","needs","filterOptions","setFilterOptions","names","customBodyRender","moment","format","expandableRows","renderExpandableRow","allStatus","allKeywords","allNeeds","allLanguages","RepoTable","setLanguages","green","isRowExpandable","OrganizationTable","DeveloperTable","setRepos","contributors","contributor","repoContributions","contributions","details","majorRepoName","majorContributions","totalContributions","averageContributions","parseInt","toFixed","avatar_url","getContributorsFromRepos","HackmdTable","setTags","allTags","s","HackmdTagTable","ProposalTable","manpowers","setManpowers","ProposalEventTable","bodyContainer","TaskTable","path","repository_url","source","body","githubIssues","marginRight","space","flexGrow","button","marginLeft","Header","isLoading","setIsLoading","lastUpdatedAt","setLastUpdatedAt","setTimeout","updatedAt","AppBar","Toolbar","routes","Link","CircularProgress","fromNow","main","spinner","left","paddingTop","App","basename","Suspense","fallback","route","exact","Boolean","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3072be93.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport { initReactI18next } from 'react-i18next';\n\nconst defaultLng = 'zh-TW';\n\ni18n\n  .use(Backend)\n  .use(initReactI18next)\n  .init({\n    lng: defaultLng,\n    backend: {\n      /* translation file path */\n      loadPath: `${process.env.PUBLIC_URL}/assets/i18n/{{ns}}/{{lng}}.json`,\n    },\n    fallbackLng: defaultLng,\n    debug: process.env.NODE_ENV === 'development',\n    /* can have multiple namespace, in case you want to divide a huge translation into smaller pieces and load them on demand */\n    ns: ['translations'],\n    defaultNS: 'translations',\n    keySeparator: false,\n    interpolation: {\n      escapeValue: false,\n      formatSeparator: ',',\n    },\n    react: {\n      wait: true,\n    },\n  });\n\nexport default i18n;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    backgroundColor: '#fff',\n    borderRadius: 5,\n  },\n  input: {\n    padding: '10px 14px',\n  },\n}));\n\nconst languages = [{\n  value: 'zh-TW',\n  title: '中文',\n  isDefault: true,\n}, {\n  value: 'en-US',\n  title: 'English',\n}];\n\nconst LanguageSelector = () => {\n  const classes = useStyles();\n  const { i18n } = useTranslation();\n  const [currentValue, setCurrentValue] = useState(languages[0].value);\n\n  const handleChange = (event) => {\n    i18n.changeLanguage(event.target.value);\n    setCurrentValue(event.target.value);\n    window.localStorage.setItem('language', event.target.value);\n  };\n\n  useEffect(() => {\n    const cache = window.localStorage.getItem('language');\n    if (cache) {\n      setCurrentValue(cache);\n      i18n.changeLanguage(cache);\n    }\n  }, [i18n]);\n\n  return (\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n      <Select\n        labelId=\"translation\"\n        id=\"translation\"\n        value={currentValue}\n        onChange={handleChange}\n        label=\"Language\"\n        size=\"small\"\n        input={<OutlinedInput classes={{ input: classes.input }} />}\n      >\n        {languages.map(({ value, title }) => (\n          <MenuItem key={value} value={value}>{title}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default LanguageSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction VisitButton({ url, title = 'Visit', tooltip, icon, className }) {\n  const isDisabled = (!url || url === '' || !url.startsWith('http'));\n  const size = 'small';\n\n  const tooltipTitle = tooltip || (isDisabled ? '' : title);\n\n  if (icon) {\n    return (\n      <Tooltip title={tooltipTitle}>\n        <span>\n          <IconButton\n            className={className}\n            disabled={isDisabled}\n            aria-label={title}\n            // component=\"span\"\n            target=\"_blank\"\n            href={url}\n            size={size}\n          >\n            {icon}\n          </IconButton>\n        </span>\n      </Tooltip>);\n  }\n  return (\n    <Button\n      className={className}\n      variant=\"outlined\"\n      color=\"primary\"\n      size={size}\n      target=\"_blank\"\n      href={url}\n      disabled={isDisabled}\n    >\n      {title}\n    </Button>);\n}\n\nVisitButton.propTypes = {\n  url: PropTypes.string,\n  title: PropTypes.string,\n  tooltip: PropTypes.string,\n  icon: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport default VisitButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nimport VisitButton from './VisitButton';\n\nfunction GithubLinkButton({ url, title = 'GitHub', className }) {\n  const githubUrl = url ?\n    (url.startsWith('https://github.com/') ? url : `https://github.com/${url}`) :\n    undefined;\n\n  return (\n    <VisitButton\n      className={className}\n      disabled={true}\n      url={githubUrl}\n      title={title}\n      icon={<GitHubIcon />}\n    />);\n}\n\nGithubLinkButton.propTypes = {\n  title: PropTypes.string,\n  url: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default GithubLinkButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport MuiTablePagination from '@material-ui/core/TablePagination';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst defaultFooterStyles = {};\n\nclass CustomFooter extends React.Component {\n  handleRowChange = (event) => {\n    this.props.changeRowsPerPage(event.target.value); // eslint-disable-line no-invalid-this\n  };\n\n  handlePageChange = (_, page) => {\n    this.props.changePage(page); // eslint-disable-line no-invalid-this\n  };\n\n  render() {\n    const { description = '', count, textLabels, rowsPerPage, page } = this.props;\n\n    const footerStyle = {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      padding: '0px 24px 0px 24px',\n    };\n\n    return (\n      <TableFooter>\n        <TableRow>\n          <TableCell>\n            {description}\n          </TableCell>\n          <TableCell style={footerStyle} colSpan={1000}>\n            <MuiTablePagination\n              component='div'\n              count={count}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              labelRowsPerPage={textLabels.rowsPerPage}\n              labelDisplayedRows={({ from, to, count }) => `${from}-${to} ${textLabels.displayRows} ${count}`}\n              backIconButtonProps={{\n                'aria-label': textLabels.previous,\n              }}\n              nextIconButtonProps={{\n                'aria-label': textLabels.next,\n              }}\n              rowsPerPageOptions={[10, 20, 100]}\n              onChangePage={this.handlePageChange}\n              onChangeRowsPerPage={this.handleRowChange}\n            />\n          </TableCell>\n        </TableRow>\n      </TableFooter>\n    );\n  }\n}\n\nCustomFooter.propTypes = {\n  description: PropTypes.string,\n  count: PropTypes.any,\n  classes: PropTypes.any,\n  textLabels: PropTypes.any,\n  rowsPerPage: PropTypes.any,\n  page: PropTypes.any,\n  changeRowsPerPage: PropTypes.func,\n  changePage: PropTypes.func,\n};\n\nexport default withStyles(defaultFooterStyles, { name: 'CustomFooter' })(CustomFooter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MUIDataTable from 'mui-datatables';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport TableFooter from './TableFooter';\n\nconst cellStyle = {\n  maxWidth: 150,\n  minWidth: 32,\n  wordBreak: 'break-word',\n  overflowWrap: 'break-word',\n  padding: '4px 4px 4px 8px',\n  cursor: 'pointer',\n  fontSize: 12,\n};\n\nconst theme = createMuiTheme({\n  overrides: {\n    MUIDataTableToolbar: {\n      root: {\n        // padding: '0px 8px 0px 8px',\n      },\n    },\n    MUIDataTable: {\n      paper: {\n        padding: 0,\n      },\n      responsiveScrollMaxHeight: {\n        maxHeight: 'calc(100vh - 170px) !important',\n      },\n    },\n    MUIDataTableHeadCell: {\n      root: {\n        ...cellStyle,\n        fontWeight: 'bold',\n      },\n    },\n    MUIDataTableBodyCell: {\n      root: cellStyle,\n    },\n    MUIDataTableSelectCell: {\n      expandDisabled: {\n        // Soft hide the button.\n        visibility: 'hidden',\n      },\n    },\n    MUIDataTableFilter: {\n      root: {\n        minWidth: 400,\n      },\n    },\n  },\n});\n\nfunction Table({ title, description, data, columns, options, nested = false }) {\n  const onItemClick = (rowData, rowMeta) => {\n    const item = data[rowMeta.dataIndex];\n    console.log(item);\n  };\n\n  // overwrite options\n  const updatedOptions = Object.assign({\n    pagination: true,\n    responsive: nested ? 'stacked' : 'scrollMaxHeight',\n    rowsPerPageOptions: nested ? [10, 50, 100, 1000] : [50, 100, 500, 1000],\n    rowsPerPage: nested ? 10 : 50,\n    filterType: 'multiselect',\n    fixedHeader: true,\n    resizableColumns: false,\n    selectableRows: 'none',\n    isRowSelectable: () => false,\n    onRowClick: onItemClick,\n    print: true,\n    customFooter: (count, page, rowsPerPage, changeRowsPerPage, changePage, textLabels) => {\n      return (\n        <TableFooter\n          description={description}\n          count={count}\n          page={page}\n          rowsPerPage={rowsPerPage}\n          changeRowsPerPage={changeRowsPerPage}\n          changePage={changePage}\n          textLabels={textLabels} />\n      );\n    },\n  }, options);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <MUIDataTable\n        className=\"data-table\"\n        title={title}\n        data={data}\n        columns={columns}\n        options={updatedOptions}\n      />\n    </MuiThemeProvider>\n  );\n}\n\nTable.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  data: PropTypes.array,\n  columns: PropTypes.array,\n  options: PropTypes.object,\n  nested: PropTypes.bool,\n};\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from '@material-ui/core/Link';\n\nfunction TextLink({ url, title = 'link', variant = 'body2', ...args }) {\n  return (\n    <Link\n      variant={variant}\n      color=\"primary\"\n      { ...args }\n      target=\"_blank\"\n      href={url}\n      style={{ fontSize: 12 }}\n    >\n      {title}\n    </Link>);\n}\n\nTextLink.propTypes = {\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  variant: PropTypes.string,\n};\n\nexport default TextLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport TextLink from '../TextLink';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    paddingInlineStart: '20px',\n  },\n}));\n\nfunction CellList({ value = [], targetKey }) {\n  const classes = useStyles();\n  const showLast = 3;\n\n  if (typeof value === 'string' || !value) {\n    value = value || '';\n    return (\n      <span>\n        {value.startsWith('http') ? <TextLink url={value} title={value} /> : value}\n      </span>);\n  }\n\n  const list = Array.isArray(value) ? value : Object.keys(value);\n  return (\n    <ul className={classes.list}>\n      {list\n        .filter((i, index) => index < showLast)\n        .map((item, index) => {\n          let data = item;\n          if (typeof item === 'object') {\n            if (targetKey && item[targetKey]) {\n              data = item[targetKey];\n            } else {\n              data = JSON.stringify(item);\n            }\n          }\n          return (\n            <li key={index}>\n              {data.startsWith('http') ? <TextLink url={data} title={data} /> : data}\n            </li>\n          );\n        })}\n    </ul>);\n}\n\nCellList.propTypes = {\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.object,\n  ]),\n  targetKey: PropTypes.string,\n};\n\nexport default CellList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction CellParagraph({ value = '', length = 25 }) {\n  return (<span>\n    {`${value.substring(0, length)}${value.length > length ? '...' : ''}`}\n  </span>);\n}\n\nCellParagraph.propTypes = {\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  length: PropTypes.number,\n};\n\nexport default CellParagraph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  img: {\n    maxHeight: 65,\n    maxWidth: '100%',\n  },\n}));\n\nfunction CellImage({ value = '', alt = '-' }) {\n  const classes = useStyles();\n  return (\n    <Grid container justify=\"center\" align=\"center\">\n      {value && <img src={value} alt={alt} className={classes.img}/>}\n    </Grid>);\n}\n\nCellImage.propTypes = {\n  value: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nexport default CellImage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslation } from 'react-i18next';\n\nimport CellList from './table/CellList';\n\nconst maxHeight = 480;\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(2),\n  },\n  listContainer: {\n    maxHeight,\n    overflow: 'auto',\n  },\n  list: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: 'inline',\n  },\n  image: {\n    maxHeight,\n  },\n}));\n\nfunction ProjectDetails({ project = {} }) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n\n  return (\n    <Paper className={classes.container}>\n      <Grid container spacing={2}>\n        <Grid item xs={4}>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <img src={project.g0vJson.thumbnail} className={classes.image} alt=\"thumbnail\"/>\n          </Grid>\n        </Grid>\n        <Grid item xs={8} className={classes.listContainer}>\n          <List className={classes.list}>\n            {Object.keys(project.g0vJson).map((key, index)=>{\n              return (\n                <ListItem alignItems=\"flex-start\" divider={true} key={index}>\n                  <ListItemText\n                    primary={\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                      >\n                        {t(`table.project.${key}`)}\n                      </Typography>\n                    }\n                    secondary={\n                      <React.Fragment>\n                        <Typography\n                          component=\"span\"\n                          variant=\"body2\"\n                          className={classes.inline}\n                          color=\"textPrimary\"\n                        >\n                          <CellList value={project.g0vJson[key]} targetKey=\"type\" />\n                        </Typography>\n                      </React.Fragment>\n                    }\n                  />\n                </ListItem>\n              );\n            })}\n          </List>\n        </Grid>\n      </Grid>\n    </Paper>);\n}\n\nProjectDetails.propTypes = {\n  project: PropTypes.object,\n};\n\nexport default ProjectDetails;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Iframe from 'react-iframe';\nimport { useTranslation } from 'react-i18next';\n\nimport GithubLinkButton from './GithubLinkButton';\n\nconst useStyles = makeStyles((theme) => ({\n  iframe: {\n    width: 500,\n    height: 450,\n    border: 'none',\n    marginBottom: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\n\nfunction G0vJsonIconButton({ url, repo, className }) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [open, setOpen] = useState(false);\n\n  const size = 'small';\n  const title = url ? t('g0vJson.helpEdit') : t('g0vJson.helpAdd');\n\n  const params = [\n    `repo=${repo}`,\n    'hideHeader=1',\n    'autoLogin=1',\n  ];\n\n  const iframeUrl = `https://g0v.github.io/editor?${params.join('&')}`;\n\n  return (\n    <React.Fragment>\n      <Tooltip title={title}>\n        <IconButton\n          className={className}\n          aria-label={title}\n          size={size}\n          onClick={()=>setOpen(true)}\n        >\n          { url ? <EditIcon /> : <AddIcon />}\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        open={open}\n        onBackdropClick={()=>{}}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"customized-dialog-title\">\n          {t('g0vJson.editor')} <GithubLinkButton url=\"https://github.com/g0v/editor\"/>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={()=>setOpen(false)}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <DialogContent>\n          <Iframe\n            url={iframeUrl}\n            width=\"500px\"\n            className={classes.iframe}\n            display=\"initial\"\n            position=\"relative\"\n          />\n        </DialogContent>\n      </Dialog>\n\n    </React.Fragment>\n  );\n}\n\nG0vJsonIconButton.propTypes = {\n  url: PropTypes.string,\n  repo: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default G0vJsonIconButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nconst useStyles = makeStyles((theme) => ({\n  nestedContainer: {\n    backgroundColor: 'rgba(0,0,0,0.1)',\n  },\n}));\n\nfunction NestedTableContainer({ columns = [], children }) {\n  const classes = useStyles();\n\n  return (\n    <TableRow>\n      <TableCell colSpan={columns.length + 1} className={classes.nestedContainer}>\n        {children}\n      </TableCell>\n    </TableRow>);\n}\n\nNestedTableContainer.propTypes = {\n  columns: PropTypes.array,\n  children: PropTypes.node,\n};\n\nexport default NestedTableContainer;\n","const env = window.location.hostname.includes('-prd-') ? 'prd' : 'dev';\n\nconst cache = {};\n\nexport const getGithubDataUrl = () => {\n  return `https://awesome-g0v-projects-${env}-data.s3.amazonaws.com/data.json`;\n};\n\nexport const getGithubIssuesUrl = () => {\n  return `https://awesome-g0v-projects-${env}-data.s3.amazonaws.com/issues.json`;\n};\n\nexport const getHackmdData = async () => {\n  const key = 'hackmd';\n  if (cache[key]) return cache[key];\n\n  const dataUrl = `https://awesome-g0v-projects-${env}-data.s3.amazonaws.com/hackmd.json`;\n\n  const res = await fetch(dataUrl);\n  const output = await res.json();\n\n  cache[key] = output;\n\n  return output;\n};\n\nexport const getHackmdDataByTag = async (inRepos) => {\n  const key = 'hackmd-byTag';\n  if (cache[key]) return cache[key];\n\n  const hackmdData = await getHackmdData();\n\n  // group by tags\n  const list = {};\n\n  hackmdData.forEach((record) => {\n    const { lastchangeAt, title } = record;\n    record.tags = record.tags || [];\n    record.tags.forEach((tag) => {\n      const data = list[tag] || {\n        tag,\n        tagUrl: `https://g0v.hackmd.io/?nav=overview&tags=%5B\"${tag}\"%5D`,\n        recentTitle: '',\n        recentLastChangedAt: undefined,\n        records: [],\n        githubRepoUrl: '',\n      };\n      data.records.push(record);\n\n      if (!data.recentLastChangedAt || data.recentLastChangedAt < lastchangeAt) {\n        data.recentLastChangedAt = lastchangeAt;\n        data.recentTitle = title;\n      }\n\n      list[tag] = data;\n    });\n  });\n\n  const repos = inRepos || await getRepos();\n\n  const output = Object.keys(list)\n    .map((key) => {\n      const item = list[key];\n      const matchRepo = repos.find((x) => {\n        const targetName = item.tag.toLowerCase();\n\n        if (targetName === 'g0v') return false;\n\n        return x.owner.login.toLowerCase() === targetName ||\n          x.name.toLowerCase() === targetName ||\n          x.name.toLowerCase().startsWith(targetName) ||\n          targetName.startsWith(x.name.toLowerCase());\n      });\n      if (matchRepo) {\n        item.githubRepoUrl = matchRepo.html_url;\n        matchRepo.hackmdUrl = item.tagUrl;\n      }\n      return item;\n    }).sort((a, b) => a.recentLastChangedAt > b.recentLastChangedAt ? -1 : 1);\n\n  cache[key] = output;\n\n  return output;\n};\n\nexport const getGithubData = async () => {\n  const key = 'github';\n  if (cache[key]) return cache[key];\n\n  const dataUrl = getGithubDataUrl();\n  const res = await fetch(dataUrl);\n  const output = await res.json();\n\n  cache[key] = output;\n\n  return output;\n};\n\nexport const getOrganizations = async () => {\n  const { data } = await getGithubData();\n  return data\n    .filter((x) => x.githubInfo.type === 'Organization')\n    .sort((a, b) => a.name > b.name ? 1 : -1);\n};\n\nexport const getRepos = async () => {\n  const { data } = await getGithubData();\n  const repos = data\n    .reduce((items, project) => [...items, ...project.repos], [])\n    // Ignore fork projects\n    .filter((x) => !x.fork)\n    .sort((a, b) => a.pushed_at < b.pushed_at ? 1 : -1)\n    .map((item) => {\n      item.languages = Object.keys(item.languages).map((key) => key);\n      return item;\n    });\n\n  // link\n  await getHackmdDataByTag(repos);\n\n  return repos;\n};\n\nexport const getProjects = async () => {\n  const repos = await getRepos();\n\n  return repos\n    .filter((x) => x.g0vJsonUrl)\n    .map((item) => {\n      item.g0vJson.name_zh = item.g0vJson.name_zh || item.g0vJson.name;\n      item.g0vJson.description_zh = item.g0vJson.description_zh || item.g0vJson.description;\n      return item;\n    });\n};\n\nexport const getProposalsDataUrl = () => {\n  return 'https://sheets.googleapis.com/v4/spreadsheets/1C9-g1pvkfqBJbfkjPB0gvfBbBxVlWYJj6tTVwaI5_x8/values/%E5%A4%A7%E6%9D%BE%E6%8F%90%E6%A1%88%E5%88%97%E8%A1%A8!A1:W10000?key=AIzaSyBhiqVypmyLHYPmqZYtvdSvxEopcLZBdYU'; // eslint-disable-line\n};\n\nexport const getProposalEvents = async () => {\n  const url = getProposalsDataUrl();\n  const res = await fetch(url);\n  const { values } = await res.json();\n\n  const headers = values.shift().map((x) => x.replace(/ /g, '_'));\n  const events = {};\n\n  values.forEach((row) => {\n    const rowData = headers.reduce((obj, header, index) => {\n      row[index] = row[index] || '';\n      if (['manpower', 'three_brief', 'tags', 'license_data'].includes(header)) {\n        obj[header] = row[index]\n          .replace(/[.,、，；\\\\/](\\s+)?/g, ',')\n          .split(',');\n      } else {\n        obj[header] = row[index];\n      }\n      return obj;\n    }, {});\n    events[rowData.term] = events[rowData.term] || {\n      term: rowData.term,\n      date: rowData.date,\n      event_name: rowData.event_name,\n      dummy_event_type: rowData.dummy_event_type,\n      proposals: [],\n    };\n    events[rowData.term].proposals.push(rowData);\n  });\n\n  return Object.keys(events).reverse().map((key) => events[key]);\n};\n\nexport const getGitHubIssues = async () => {\n  const url = getGithubIssuesUrl();\n  const res = await fetch(url);\n  const { items } = await res.json();\n\n  return items;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  badget: {\n    border: '1px solid rgba(0,0,0,0.1)',\n    borderRadius: 3,\n    backgroundColor: 'rgba(0,0,0,0.1)',\n    textAlign: 'center',\n  },\n}));\n\nfunction ProjectStatusBadget({ value }) {\n  const classes = useStyles();\n\n  if (!value) return null;\n\n  const color = 'textPrimary';\n\n  return (\n    <div className={classes.badget}>\n      <Typography color={color} variant=\"inherit\">\n        {value.toLowerCase()}\n      </Typography>\n    </div>);\n}\n\nProjectStatusBadget.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default ProjectStatusBadget;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport { useTranslation } from 'react-i18next';\n\nimport Table from './Table';\nimport CellList from './table/CellList';\nimport CellParagraph from './table/CellParagraph';\nimport CellImage from './table/CellImage';\nimport VisitButton from './VisitButton';\nimport TextLink from './TextLink';\nimport ProjectDetails from './ProjectDetails';\nimport G0vJsonIconButton from './G0vJsonIconButton';\nimport NestedTableContainer from './table/NestedTableContainer';\nimport GithubLinkButton from './GithubLinkButton';\nimport { getProjects } from '../data';\nimport ProjectStatusBadget from './ProjectStatusBadget';\n\nfunction ProjectTable({ data: inData }) {\n  const { t } = useTranslation();\n  const [data, setData] = useState([]);\n  const [filterOptions, setFilterOptions] = useState({\n    status: [],\n    keywords: [],\n    needs: [],\n    languages: [],\n  });\n\n  const title = t('table.project.title');\n  const description = 'Data Source: GitHub & g0v.json';\n\n  const columns = [{\n    name: 'g0vJson.status',\n    label: t('table.project.status'),\n    options: {\n      filter: true,\n      filterOptions: {\n        names: filterOptions.status,\n      },\n      sort: true,\n      customBodyRender: (value = '') => <ProjectStatusBadget value={value} />,\n    },\n  }, {\n    name: 'owner.login',\n    label: t('table.project.org'),\n    options: {\n      filter: true,\n      sort: true,\n      customBodyRender(value) {\n        return (\n          <TextLink title={value} url={`https://github.com/${value}`} />);\n      },\n    },\n  }, {\n    name: 'g0vJson.author',\n    label: t('table.project.author'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'g0vJson.thumbnail',\n    label: t('table.project.thumbnail'),\n    options: {\n      filter: false,\n      sort: false,\n      display: false,\n      customBodyRender: (value = []) => <CellImage value={value[0]} />,\n    },\n  }, {\n    name: 'name',\n    label: t('table.project.repo'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'g0vJson.name',\n    label: t('table.project.name'),\n    options: {\n      display: false,\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'g0vJson.name_zh',\n    label: t('table.project.name_zh'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'g0vJson.description',\n    label: t('table.project.description'),\n    options: {\n      display: false,\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <CellParagraph value={value} />,\n    },\n  }, {\n    name: 'g0vJson.description_zh',\n    label: t('table.project.description_zh'),\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <CellParagraph value={value} />,\n    },\n  }, {\n    name: 'g0vJson.keywords',\n    label: t('table.project.keywords'),\n    options: {\n      filter: true,\n      filterOptions: {\n        names: filterOptions.keywords,\n      },\n      sort: true,\n      customBodyRender: (value) => <CellList value={value} />,\n    },\n  }, {\n    name: 'g0vJson.needs',\n    label: t('table.project.needs'),\n    options: {\n      filter: true,\n      filterOptions: {\n        names: filterOptions.needs,\n      },\n      sort: true,\n      customBodyRender: (value) => <CellList value={value} />,\n    },\n  }, {\n    name: 'g0vJson.licenses',\n    label: t('table.project.licenses'),\n    options: {\n      display: false,\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => <CellList value={value} targetKey=\"type\" />,\n    },\n  }, {\n    name: 'languagePrimary',\n    label: t('table.project.language'),\n    options: {\n      display: false,\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'languageSecondary',\n    label: t('table.project.language2'),\n    options: {\n      display: false,\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'languages',\n    label: t('table.project.allLanguages'),\n    options: {\n      filter: true,\n      filterOptions: {\n        names: filterOptions.languages,\n      },\n      sort: false,\n      display: true,\n      customBodyRender: (value) => <CellList value={value} />,\n    },\n  }, {\n    name: 'open_issues',\n    label: t('table.project.issues'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'contributors.length',\n    label: t('table.project.contributors'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'created_at',\n    label: t('table.project.createdAt'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD'),\n    },\n  }, {\n    name: 'pushed_at',\n    label: t('table.project.pushedAt'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD'),\n    },\n  }, {\n    name: 'g0vJsonUrl',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value, { rowData }) => {\n        const repo = `${rowData[1]}/${rowData[4]}`;\n        return (<G0vJsonIconButton url={value} repo={repo} />);\n      },\n    },\n  }, {\n    name: 'g0vJson.homepage',\n    label: ' ',\n    options: {\n      filter: false,\n      customBodyRender(value) {\n        return (\n          <VisitButton url={value} title={t('table.project.homepage')} icon={<LanguageIcon />} />);\n      },\n    },\n  }, {\n    name: 'g0vJson.document',\n    label: ' ',\n    options: {\n      filter: false,\n      customBodyRender(value) {\n        return (\n          <VisitButton url={value} title={t('table.project.documents')} icon={<DescriptionIcon />} />);\n      },\n    },\n  }, {\n    name: 'html_url',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <GithubLinkButton url={value} />,\n    },\n  }];\n\n  const options = {\n    expandableRows: true,\n    renderExpandableRow(rowData, rowMeta) {\n      const item = data[rowMeta.dataIndex];\n      return (\n        <NestedTableContainer columns={columns}>\n          <ProjectDetails project={item} />\n        </NestedTableContainer>\n      );\n    },\n  };\n\n  useEffect(() => {\n    const allStatus = [];\n    const allKeywords = [];\n    const allNeeds = [];\n    const allLanguages = [];\n    data.forEach((item) => {\n      item.languages.forEach((key) => {\n        if (!allLanguages.includes(key)) {\n          allLanguages.push(key);\n        }\n      });\n\n      if (Array.isArray(item.g0vJson.keywords)) {\n        item.g0vJson.keywords.forEach((key) => {\n          if (!allKeywords.includes(key)) {\n            allKeywords.push(key);\n          }\n        });\n      }\n\n      if (Array.isArray(item.g0vJson.needs)) {\n        item.g0vJson.needs.forEach((key) => {\n          if (!allNeeds.includes(key)) {\n            allNeeds.push(key);\n          }\n        });\n      }\n\n      if (item.g0vJson.status) {\n        if (!allStatus.includes(item.g0vJson.status.toLowerCase())) {\n          allStatus.push(item.g0vJson.status.toLowerCase());\n        }\n      }\n    });\n    setFilterOptions({\n      languages: allLanguages,\n      keywords: allKeywords,\n      needs: allNeeds,\n      status: allStatus,\n    });\n  }, [data]);\n\n  useEffect(() => {\n    if (inData) {\n      setData(inData);\n    } else {\n      (async () => {\n        setData(await getProjects());\n      })();\n    }\n  }, [inData]);\n\n  return (\n    <Table\n      title={title}\n      description={description}\n      data={data}\n      columns={columns}\n      options={options}\n    />\n  );\n}\n\nProjectTable.propTypes = {\n  data: PropTypes.array,\n};\n\nexport default ProjectTable;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { useTranslation } from 'react-i18next';\nimport { green } from '@material-ui/core/colors';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport DescriptionIcon from '@material-ui/icons/Description';\n\nimport Table from './Table';\nimport GithubLinkButton from './GithubLinkButton';\nimport TextLink from './TextLink';\nimport CellList from './table/CellList';\nimport VisitButton from './VisitButton';\nimport G0vJsonIconButton from './G0vJsonIconButton';\nimport NestedTableContainer from './table/NestedTableContainer';\nimport ProjectDetails from './ProjectDetails';\nimport { getRepos } from '../data';\n\nfunction RepoTable({ data: inData, nested = false }) {\n  const { t } = useTranslation();\n  const [data, setData] = useState([]);\n  const [languages, setLanguages] = useState([]);\n\n  const title = t('table.repo.title');\n  const description = 'Data Source: GitHub';\n\n  const columns = [{\n    name: 'archived',\n    label: t('table.repo.activity'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender(value) {\n        return value ? <ErrorIcon color=\"secondary\" /> : <WbSunnyIcon style={{ color: green[500] }} />;\n      },\n    },\n  }, {\n    name: 'owner.login',\n    label: t('table.repo.org'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender(value) {\n        return (\n          <TextLink title={value} url={`https://github.com/${value}`} />);\n      },\n    },\n  }, {\n    name: 'name',\n    label: t('table.repo.name'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'description',\n    label: t('table.repo.description'),\n    options: {\n      filter: false,\n      sort: false,\n    },\n  }, {\n    name: 'languagePrimary',\n    label: t('table.repo.language'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'languageSecondary',\n    label: t('table.repo.language2'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'languages',\n    label: t('table.repo.allLanguages'),\n    options: {\n      filter: true,\n      filterOptions: {\n        names: languages,\n      },\n      sort: false,\n      display: false,\n      customBodyRender: (value) => <CellList value={value} />,\n    },\n  }, {\n    name: 'open_issues',\n    label: t('table.repo.issues'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'contributors.length',\n    label: t('table.repo.contributors'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'created_at',\n    label: t('table.repo.createdAt'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD'),\n    },\n  }, {\n    name: 'pushed_at',\n    label: t('table.repo.pushedAt'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD'),\n    },\n  }, {\n    name: 'license.spdx_id',\n    label: t('table.repo.license'),\n    options: {\n      display: false,\n      filter: true,\n      sort: true,\n    },\n  }, {\n    name: 'g0vJsonUrl',\n    label: t('table.repo.g0vJsonProvided'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value, { rowData }) => {\n        const repo = `${rowData[1]}/${rowData[2]}`;\n        return (<G0vJsonIconButton url={value} repo={repo} />);\n      },\n    },\n  }, {\n    name: 'hackmdUrl',\n    label: ' ',\n    options: {\n      filter: false,\n      customBodyRender: (value) => <VisitButton url={value} title={t('table.repo.hackmdUrl')} icon={<DescriptionIcon />} />,\n    },\n  }, {\n    name: 'html_url',\n    label: ' ',\n    options: {\n      filter: false,\n      customBodyRender: (value) => <GithubLinkButton url={value} />,\n    },\n  }];\n\n  const options = {\n    filterType: 'multiselect',\n    expandableRows: true,\n    isRowExpandable(dataIndex) {\n      return data[dataIndex].g0vJsonUrl;\n    },\n    renderExpandableRow(rowData, rowMeta) {\n      const item = data[rowMeta.dataIndex];\n      return (\n        <NestedTableContainer columns={columns}>\n          <ProjectDetails project={item} />\n        </NestedTableContainer>\n      );\n    },\n  };\n\n  useEffect(() => {\n    const allLanguages = [];\n    data.forEach((item) => {\n      item.languages.forEach((key) => {\n        if (!allLanguages.includes(key)) {\n          allLanguages.push(key);\n        }\n      });\n    });\n    setLanguages(allLanguages);\n  }, [data]);\n\n  useEffect(() => {\n    if (inData) {\n      setData(inData);\n    } else {\n      (async () => {\n        setData(await getRepos());\n      })();\n    }\n  }, [inData]);\n\n  return (\n    <Table\n      title={title}\n      description={description}\n      data={data}\n      columns={columns}\n      options={options}\n      nested={nested}\n    />\n  );\n}\n\nRepoTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  nested: PropTypes.bool,\n};\n\nexport default RepoTable;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// import { makeStyles } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\n\nimport Table from './Table';\nimport RepoTable from './RepoTable';\nimport GithubLinkButton from './GithubLinkButton';\nimport NestedTableContainer from './table/NestedTableContainer';\nimport CellImage from './table/CellImage';\nimport { getOrganizations } from '../data';\n// const useStyles = makeStyles((theme) => ({}));\n\nfunction OrganizationTable({ data: inData }) {\n  // const classes = useStyles();\n  const { t } = useTranslation();\n  const [data, setData] = useState([]);\n\n  const title = t('table.organization.title');\n  const description = 'Data Source: GitHub';\n\n  const columns = [{\n    name: 'githubInfo.type',\n    label: t('table.organization.type'),\n    options: {\n      filter: false,\n      sort: true,\n      display: false,\n    },\n  }, {\n    name: 'githubInfo.avatar_url',\n    label: t('table.organization.avatar'),\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <CellImage value={value} />,\n    },\n  }, {\n    name: 'name',\n    label: t('table.organization.name'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'githubInfo.login',\n    label: t('table.organization.id'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'githubInfo.description',\n    label: t('table.organization.description'),\n    options: {\n      filter: false,\n      sort: false,\n    },\n  }, {\n    name: 'repos.length',\n    label: t('table.organization.repos'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'githubInfo.html_url',\n    label: ' ',\n    options: {\n      filter: false,\n      customBodyRender: (value)=><GithubLinkButton url={value} />,\n    },\n  }];\n\n  const options = {\n    expandableRows: true,\n    renderExpandableRow(rowData, rowMeta) {\n      const item = data[rowMeta.dataIndex];\n      const repos = item.repos.sort((a, b) => a.pushed_at > b.pushed_at ? -1 : 1);\n      return (\n        <NestedTableContainer columns={columns}>\n          <RepoTable data={repos} nested={true} />\n        </NestedTableContainer>\n      );\n    },\n  };\n\n\n  useEffect(() => {\n    if (inData) {\n      setData(inData);\n    } else {\n      (async () => {\n        setData(await getOrganizations());\n      })();\n    }\n  }, [inData]);\n\n  return (\n    <Table\n      title={title}\n      description={description}\n      data={data}\n      columns={columns}\n      options={options}\n    />\n  );\n}\n\nOrganizationTable.propTypes = {\n  data: PropTypes.array,\n};\n\nexport default OrganizationTable;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport Table from './Table';\nimport GithubLinkButton from './GithubLinkButton';\nimport TextLink from './TextLink';\nimport NestedTableContainer from './table/NestedTableContainer';\nimport RepoTable from './RepoTable';\nimport CellImage from './table/CellImage';\nimport { getRepos } from '../data';\n\nfunction DeveloperTable({ repos: inRepos, nested = false }) {\n  const { t } = useTranslation();\n  const [repos, setRepos] = useState([]);\n  const [data, setData] = useState([]);\n\n  const title = t('table.developer.title');\n  const description = 'Data Source: GitHub';\n\n  const columns = [{\n    name: 'details.type',\n    label: t('table.developer.type'),\n    options: {\n      filter: true,\n      sort: true,\n      display: false,\n    },\n  }, {\n    name: 'details.avatar_url',\n    label: t('table.developer.avatar'),\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <CellImage value={value} />,\n    },\n  }, {\n    name: 'details.login',\n    label: t('table.developer.githubId'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'majorRepoName',\n    label: t('table.developer.majorRepoName'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => <TextLink title={value} url={`https://github.com/${value}`} />,\n    },\n  }, {\n    name: 'majorContributions',\n    label: t('table.developer.majorContributions'),\n    options: {\n      display: false,\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'repos.length',\n    label: t('table.developer.repos'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'averageContributions',\n    label: t('table.developer.averageContributions'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'details.html_url',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value)=><GithubLinkButton url={value} />,\n    },\n  }];\n\n  const options = {\n    expandableRows: true,\n    renderExpandableRow(rowData, rowMeta) {\n      const item = data[rowMeta.dataIndex];\n      return (\n        <NestedTableContainer columns={columns}>\n          <RepoTable data={item.repos} nested={true} />\n        </NestedTableContainer>\n      );\n    },\n  };\n\n  useEffect(() => {\n    setData(getContributorsFromRepos(repos));\n  }, [repos]);\n\n  useEffect(() => {\n    if (inRepos) {\n      setRepos(inRepos);\n    } else {\n      (async () => {\n        setRepos(await getRepos());\n      })();\n    }\n  }, [inRepos]);\n\n  return (\n    <Table\n      title={title}\n      description={description}\n      data={data}\n      columns={columns}\n      options={options}\n      nested={nested}\n    />\n  );\n}\n\nDeveloperTable.propTypes = {\n  repos: PropTypes.array.isRequired,\n  nested: PropTypes.bool,\n};\n\nexport default DeveloperTable;\n\n\nfunction getContributorsFromRepos(repos) {\n  const list = {};\n\n  repos.forEach((repo) => {\n    const { contributors } = repo;\n    contributors.forEach((contributor) => {\n      const { contributions: repoContributions } = contributor;\n      const key = `${contributor.type}-${contributor.login}`;\n      const data = list[key] || {\n        details: contributor,\n        repos: [],\n        majorRepoName: '',\n        majorContributions: 0,\n        totalContributions: 0,\n        averageContributions: 0,\n      };\n\n      data.repos.push(repo);\n      data.totalContributions += repoContributions;\n\n      if (repoContributions > data.majorContributions) {\n        data.majorContributions = repoContributions;\n        data.majorRepoName = repo.name;\n      }\n\n      list[key] = data;\n    });\n  });\n\n  return Object.keys(list)\n    .map((key) => {\n      const { details, totalContributions, repos } = list[key];\n      list[key].averageContributions = parseInt((totalContributions / repos.length).toFixed(0));\n\n      // overwrite the Anonymous\n      if (details.type === 'Anonymous') {\n        details.login = '沒有人';\n        details.avatar_url = 'https://avatars1.githubusercontent.com/u/2668086?s=200&v=4';\n        details.html_url = 'https://github.com/g0v';\n      }\n\n      return list[key];\n    })\n    .sort((a, b) => a.repos.length > b.repos.length ? -1 : 1);\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { useTranslation } from 'react-i18next';\n\nimport Table from './Table';\nimport CellList from './table/CellList';\nimport VisitButton from './VisitButton';\n\nfunction HackmdTable({ data, nested = false }) {\n  const { t } = useTranslation();\n  const [tags, setTags] = useState([]);\n\n  const title = t('table.hackmd.listTitle');\n  const description = 'Data Source: https://g0v.hackmd.io';\n\n  const columns = [{\n    name: 'title',\n    label: t('table.hackmd.title'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'userpath',\n    label: t('table.hackmd.user'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'tags',\n    label: t('table.hackmd.tags'),\n    options: {\n      display: !nested,\n      filter: true,\n      filterOptions: {\n        names: tags,\n      },\n      sort: true,\n      customBodyRender: (value) => <CellList value={value}/>,\n    },\n  }, {\n    name: 'publishType',\n    label: t('table.hackmd.publishType'),\n    options: {\n      filter: true,\n      sort: true,\n    },\n  }, {\n    name: 'publishedAt',\n    label: t('table.hackmd.publishedAt'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => value ? moment(value).format('YYYY/MM/DD') : '',\n    },\n  }, {\n    name: 'createdAt',\n    label: t('table.hackmd.createdAt'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD'),\n    },\n  }, {\n    name: 'lastchangeAt',\n    label: t('table.hackmd.lastchangeAt'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD HH:MM'),\n    },\n  }, {\n    name: 'id',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender(value) {\n        return (\n          <VisitButton url={`https://g0v.hackmd.io/${value}`} title={t('table.hackmd.hackmd')} icon={<DescriptionIcon />}/>);\n      },\n    },\n  }];\n\n  const options = {\n    expandableRows: true,\n    isRowExpandable: () => false,\n  };\n\n  useEffect(() => {\n    const allTags = [];\n    data.forEach(({ tags = [] }) => {\n      tags.forEach((tag) => {\n        if (!allTags.includes(tag)) {\n          allTags.push(tag);\n        }\n      });\n    });\n\n    setTags(allTags);\n  }, [data]);\n\n  return (\n    <Table\n      title={title}\n      description={description}\n      data={data}s\n      columns={columns}\n      options={options}\n      nested={nested}\n    />\n  );\n}\n\nHackmdTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  nested: PropTypes.bool,\n};\n\nexport default HackmdTable;\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { useTranslation } from 'react-i18next';\n\nimport Table from './Table';\nimport VisitButton from './VisitButton';\nimport NestedTableContainer from './table/NestedTableContainer';\nimport HackmdTable from './HackmdTable';\nimport GithubLinkButton from './GithubLinkButton';\nimport { getHackmdDataByTag } from '../data';\n\nfunction HackmdTagTable() {\n  const { t } = useTranslation();\n  const [data, setData] = useState([]);\n\n  const title = t('table.hackmdTag.listTitle');\n  const description = 'Data Source: https://g0v.hackmd.io';\n\n  const columns = [{\n    name: 'tag',\n    label: t('table.hackmdTag.tag'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'recentTitle',\n    label: t('table.hackmdTag.recentTitle'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'recentLastChangedAt',\n    label: t('table.hackmdTag.recentLastChangedAt'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD HH:MM'),\n    },\n  }, {\n    name: 'records.length',\n    label: t('table.hackmdTag.records'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'githubRepoUrl',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <GithubLinkButton url={value} />,\n    },\n  }, {\n    name: 'tagUrl',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender(value) {\n        return (\n          <VisitButton url={value} title={t('table.hackmdTag.hackmd')} icon={<DescriptionIcon />}/>);\n      },\n    },\n  }];\n\n  const options = {\n    expandableRows: true,\n    renderExpandableRow(rowData, rowMeta) {\n      const item = data[rowMeta.dataIndex];\n      return (\n        <NestedTableContainer columns={columns}>\n          <HackmdTable data={item.records} nested={true} />\n        </NestedTableContainer>\n      );\n    },\n  };\n\n  useEffect(() => {\n    (async () => {\n      setData(await getHackmdDataByTag());\n    })();\n  }, []);\n\n  return (\n    <Table\n      title={title}\n      description={description}\n      data={data}\n      columns={columns}\n      options={options}\n    />\n  );\n}\n\nexport default HackmdTagTable;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { useTranslation } from 'react-i18next';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport LooksOneIcon from '@material-ui/icons/LooksOne';\nimport LooksTwoIcon from '@material-ui/icons/LooksTwo';\nimport Looks3Icon from '@material-ui/icons/Looks3';\n\nimport Table from './Table';\nimport CellList from './table/CellList';\nimport VisitButton from './VisitButton';\n\nfunction ProposalTable({ data, nested = false }) {\n  const { t } = useTranslation();\n  const [manpowers, setManpowers] = useState([]);\n\n  const title = t('table.proposal.listTitle');\n\n  const columns = [{\n    name: 'term',\n    label: t('table.proposal.term'),\n    options: {\n      display: !nested,\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'event_name',\n    label: t('table.proposal.eventName'),\n    options: {\n      display: !nested,\n      filter: !nested,\n      sort: true,\n    },\n  }, {\n    name: 'dummy_event_type',\n    label: t('table.proposal.eventType'),\n    options: {\n      display: !nested,\n      filter: !nested,\n      sort: true,\n    },\n  }, {\n    name: 'date',\n    label: t('table.proposal.date'),\n    options: {\n      display: !nested,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD'),\n    },\n  }, {\n    name: 'project',\n    label: t('table.proposal.project'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'owner_name',\n    label: t('table.proposal.ownerName'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'slack_id',\n    label: t('table.proposal.slackId'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'slack_channel',\n    label: t('table.proposal.slackChannel'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'three_brief',\n    label: t('table.proposal.threeBrief'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => <CellList value={value}/>,\n    },\n  }, {\n    name: 'manpower',\n    label: t('table.proposal.manpower'),\n    options: {\n      filter: true,\n      filterOptions: {\n        names: manpowers,\n      },\n      sort: true,\n      customBodyRender: (value) => <CellList value={value}/>,\n    },\n  }, {\n    name: 'tags',\n    label: t('table.proposal.tags'),\n    options: {\n      filter: true,\n      filterOptions: {\n        names: manpowers,\n      },\n      sort: true,\n      customBodyRender: (value) => <CellList value={value}/>,\n    },\n  }, {\n    name: 'education_project',\n    label: t('table.proposal.educationProject'),\n    options: {\n      filter: true,\n      sort: true,\n    },\n  }, {\n    name: 'license_data',\n    label: t('table.proposal.license'),\n    options: {\n      filter: true,\n      sort: true,\n    },\n  }, {\n    name: 'video_link',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => <VisitButton url={value} title={t('table.proposal.video')} icon={<VideocamIcon />}/>,\n    },\n  }, {\n    name: 'guideline',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <VisitButton url={value} title={t('table.proposal.guideline')} icon={<DescriptionIcon />}/>,\n    },\n  }, {\n    name: 'other_document',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <VisitButton url={value} title={t('table.proposal.otherDocument')} icon={<LooksOneIcon />}/>,\n    },\n  }, {\n    name: 'other_document2',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <VisitButton url={value} title={t('table.proposal.otherDocument')} icon={<LooksTwoIcon />}/>,\n    },\n  }, {\n    name: 'other_document3',\n    label: ' ',\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value) => <VisitButton url={value} title={t('table.proposal.otherDocument')} icon={<Looks3Icon />}/>,\n    },\n  }];\n\n  const options = {\n    expandableRows: true,\n    isRowExpandable: () => false,\n  };\n\n  useEffect(() => {\n    setManpowers([]);\n  }, []);\n\n  return (\n    <Table\n      title={title}\n      data={data}s\n      columns={columns}\n      options={options}\n      nested={nested}\n    />\n  );\n}\n\nProposalTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  nested: PropTypes.bool,\n};\n\nexport default ProposalTable;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { useTranslation } from 'react-i18next';\n\nimport Table from './Table';\nimport NestedTableContainer from './table/NestedTableContainer';\nimport { getProposalEvents } from '../data';\nimport ProposalTable from './ProposalTable';\n\nfunction ProposalEventTable({ data: inData, nested = false }) {\n  const { t } = useTranslation();\n  const [data, setData] = useState([]);\n\n  const title = t('table.proposal.listTitle');\n  const description = 'Data Source: https://docs.google.com/spreadsheets/d/1C9-g1pvkfqBJbfkjPB0gvfBbBxVlWYJj6tTVwaI5_x8/edit#gid=1563040282';\n\n  const columns = [{\n    name: 'term',\n    label: t('table.proposal.term'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'event_name',\n    label: t('table.proposal.eventName'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'dummy_event_type',\n    label: t('table.proposal.eventType'),\n    options: {\n      filter: true,\n      sort: true,\n    },\n  }, {\n    name: 'date',\n    label: t('table.proposal.date'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD'),\n    },\n  }, {\n    name: 'proposals.length',\n    label: t('table.proposal.proposalCount'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }];\n\n  const options = {\n    expandableRows: true,\n    renderExpandableRow(rowData, rowMeta) {\n      const item = data[rowMeta.dataIndex];\n      return (\n        <NestedTableContainer columns={columns}>\n          <ProposalTable data={item.proposals} nested={true} />\n        </NestedTableContainer>\n      );\n    },\n  };\n\n  useEffect(() => {\n    if (inData) {\n      setData(inData);\n    } else {\n      (async () => {\n        setData(await getProposalEvents());\n      })();\n    }\n  }, [inData]);\n\n  return (\n    <Table\n      title={title}\n      description={description}\n      data={data}s\n      columns={columns}\n      options={options}\n      nested={nested}\n    />\n  );\n}\n\nProposalEventTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  nested: PropTypes.bool,\n};\n\nexport default ProposalEventTable;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { useTranslation } from 'react-i18next';\nimport ReactMarkdown from 'react-markdown';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Table from './Table';\nimport GithubLinkButton from './GithubLinkButton';\nimport { getGitHubIssues, getRepos } from '../data';\nimport CellList from './table/CellList';\nimport CellParagraph from './table/CellParagraph';\nimport CellImage from './table/CellImage';\nimport TextLink from './TextLink';\nimport NestedTableContainer from './table/NestedTableContainer';\nimport RepoTable from './RepoTable';\n\nconst useStyles = makeStyles((theme) => ({\n  bodyContainer: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nfunction TaskTable({ data: inData, nested = false }) {\n  const classes = useStyles();\n\n  const { t } = useTranslation();\n  const [repos, setRepos] = useState([]);\n  const [data, setData] = useState([]);\n\n  const title = t('table.task.listTitle');\n  const description = `Data Source: GitHub`;\n\n  const columns = [{\n    name: 'source',\n    label: t('table.task.source'),\n    options: {\n      filter: true,\n      sort: true,\n    },\n  }, {\n    name: 'repository_url',\n    label: t('table.task.githubRepo'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender(value) {\n        const name = value.replace('https://api.github.com/repos/', '');\n        return (\n          <TextLink title={name} url={`https://github.com/${name}`} />);\n      },\n    },\n  }, {\n    name: 'title',\n    label: t('table.task.title'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'body',\n    label: t('table.task.description'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => <CellParagraph value={value} length={50} />,\n    },\n  }, {\n    name: 'labels',\n    label: t('table.task.labels'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => <CellList value={value} targetKey=\"name\" />,\n    },\n  }, {\n    name: 'user.avatar_url',\n    label: t('table.task.avatar'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => <CellImage value={value} />,\n    },\n  }, {\n    name: 'user.login',\n    label: t('table.task.author'),\n    options: {\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'author_association',\n    label: t('table.task.authorAssociation'),\n    options: {\n      filter: true,\n      sort: true,\n    },\n  }, {\n    name: 'comments',\n    label: t('table.task.comments'),\n    options: {\n      display: false,\n      filter: false,\n      sort: true,\n    },\n  }, {\n    name: 'created_at',\n    label: t('table.task.createdAt'),\n    options: {\n      filter: false,\n      sort: true,\n      customBodyRender: (value) => moment(value).format('YYYY/MM/DD'),\n    },\n  }, {\n    name: 'html_url',\n    label: ' ',\n    options: {\n      filter: false,\n      customBodyRender: (value) => <GithubLinkButton url={value} />,\n    },\n  }];\n\n  const options = {\n    expandableRows: true,\n    renderExpandableRow(rowData, rowMeta) {\n      const item = data[rowMeta.dataIndex];\n      const repo = repos.find((x) => x.html_url === item.repository_url.replace('https://api.github.com/repos/', 'https://github.com/'));\n      return (\n        <NestedTableContainer columns={columns}>\n          <Paper className={classes.bodyContainer}>\n            <ReactMarkdown source={item.body} />\n          </Paper>\n          <RepoTable data={[repo]} nested={true} />\n        </NestedTableContainer>\n      );\n    },\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (inData) {\n        setData(inData);\n      } else {\n        const githubIssues = await getGitHubIssues();\n\n        setData(githubIssues.map((item) => {\n          item.source = 'GitHub';\n          return item;\n        }));\n      }\n\n      setRepos(await getRepos());\n    })();\n  }, [inData]);\n\n  return (\n    <Table\n      title={title}\n      description={description}\n      data={data}s\n      columns={columns}\n      options={options}\n      nested={nested}\n    />\n  );\n}\n\nTaskTable.propTypes = {\n  data: PropTypes.array,\n  nested: PropTypes.bool,\n};\n\nexport default TaskTable;\n","import ProjectTable from './components/ProjectTable';\nimport OrganizationTable from './components/OrganizationTable';\nimport RepoTable from './components/RepoTable';\nimport DeveloperTable from './components/DeveloperTable';\nimport HackmdTagTable from './components/HackmdTagTable';\nimport ProposalEventTable from './components/ProposalEventTable';\nimport TaskTable from './components/TaskTable';\n\nexport default [{\n  title: 'header.findProjects',\n  path: '/',\n  component: ProjectTable,\n}, {\n  title: 'header.findProposals',\n  path: '/proposals',\n  component: ProposalEventTable,\n}, {\n  title: 'header.findTasks',\n  path: '/tasks',\n  component: TaskTable,\n}, {\n  title: 'header.findCowriting',\n  path: '/cowriting',\n  component: HackmdTagTable,\n}, {\n  title: 'header.findRepositories',\n  path: '/repositories',\n  component: RepoTable,\n}, {\n  title: 'header.findOrganizations',\n  path: '/organizations',\n  component: OrganizationTable,\n}, {\n  title: 'header.findDevelopers',\n  path: '/developers',\n  component: DeveloperTable,\n}];\n","import React, { useEffect, useState } from 'react';\nimport Link from 'react-router-dom/Link';\nimport { useTranslation } from 'react-i18next';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport LanguageSelector from './LanguageSelector';\nimport VisitButton from './VisitButton';\nimport GithubLinkButton from './GithubLinkButton';\nimport routes from '../routes';\nimport { getGithubDataUrl, getGithubData } from '../data';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginRight: theme.spacing(1),\n  },\n  space: {\n    flexGrow: 1,\n  },\n  button: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastUpdatedAt, setLastUpdatedAt] = useState('');\n\n  useEffect(() => {\n    setTimeout(async () => {\n      const { updatedAt } = await getGithubData();\n      setLastUpdatedAt(updatedAt);\n      setIsLoading(false);\n    }, 5000);\n  }, []);\n\n  return (\n    <AppBar position=\"fixed\" color=\"default\">\n      <Toolbar variant=\"dense\">\n        <Typography variant=\"h6\" className={classes.title}>\n          {t('app.name')}\n        </Typography>\n        {routes.map(({ title, path }) => (\n          <Button to={path} key={title} component={Link}>\n            {t(title)}\n          </Button>\n        ))}\n\n        <div className={classes.space}></div>\n\n        {isLoading && <CircularProgress size={20} color=\"inherit\" className={classes.button} />}\n\n        {lastUpdatedAt &&\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            {t('app.updatedAt')} {moment(lastUpdatedAt).fromNow()}\n          </Typography>}\n        <VisitButton\n          className={classes.button}\n          url={getGithubDataUrl()}\n          title={'Download JSON'}\n          icon={<CloudDownloadIcon />}\n        />\n        <GithubLinkButton\n          className={classes.button}\n          url='chunyenHuang/awesome-g0v-projects'\n        />\n        <LanguageSelector />\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nHeader.propTypes = {};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport './i18n';\n\nimport Header from './components/Header';\nimport routes from './routes';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {},\n  spinner: {\n    position: 'absolute',\n    top: 150,\n    left: 'calc(50% - 20px)',\n  },\n  container: {\n    // padding: theme.spacing(2),\n    paddingTop: 55,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.main}>\n      <Router basename={'/'}>\n        <React.Suspense fallback={<CircularProgress className={classes.spinner} />}>\n          <Header />\n          <div className={classes.container}>\n            <Switch>\n              {routes.map((route, index) => (\n                <Route path={route.path} exact key={index}>\n                  <route.component />\n                </Route>\n              ))}\n            </Switch>\n          </div>\n        </React.Suspense>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, { headers: { 'Service-Worker': 'script' } })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}